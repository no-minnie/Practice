@model IEnumerable<PhoneBook.Models.Contact>
@using PhoneBook.Models 

@{
    ViewData["Title"] = "Телефонный справочник";
    var contactFormData = ViewData["ContactFormData"] as ContactViewModel ?? new ContactViewModel();
    var currentSearchTerm = ViewData["SearchTerm"] as string;
}

<h1>@ViewData["Title"]</h1>
<hr />

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="row">
    <div class="col-md-4 mb-3">
        <h2>Добавить контакт</h2>
        <form asp-controller="Contacts" asp-action="Create" method="post">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger mb-2"></div>

            <div class="mb-3">
                <label asp-for="@contactFormData.Name" class="form-label"></label>
                <input asp-for="@contactFormData.Name" class="form-control" />
                <span asp-validation-for="@contactFormData.Name" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="@contactFormData.PhoneNumber" class="form-label"></label>
                <input asp-for="@contactFormData.PhoneNumber" class="form-control" />
                <span asp-validation-for="@contactFormData.PhoneNumber" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="@contactFormData.Email" class="form-label"></label>
                <input asp-for="@contactFormData.Email" class="form-control" />
                <span asp-validation-for="@contactFormData.Email" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">Добавить</button>
        </form>
    </div>

    <div class="col-md-8">
        <h2>Список контактов</h2>

        <form asp-controller="Contacts" asp-action="Index" method="get" class="mb-3">
            <div class="input-group">
                <input type="text" name="searchTerm" class="form-control" placeholder="Поиск по имени..." value="@currentSearchTerm" />
                <button class="btn btn-outline-secondary" type="submit">Найти</button>
                @if (!string.IsNullOrWhiteSpace(currentSearchTerm))
                {
                    <a asp-controller="Contacts" asp-action="Index" class="btn btn-outline-danger" title="Очистить поиск">×</a>
                }
            </div>
        </form>

        @if (!Model.Any())
        {
            if (!string.IsNullOrWhiteSpace(currentSearchTerm))
            {
                <p>Контакты по запросу "@currentSearchTerm" не найдены.</p>
                <p><a asp-controller="Contacts" asp-action="Index">Показать все контакты</a></p>
            }
            else
            {
                <p>Справочник пуст.</p>
            }
        }
        else
        {
            <table class="table table-striped table-hover table-sm">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(m => contactFormData.Name)</th>
                        <th>@Html.DisplayNameFor(m => contactFormData.PhoneNumber)</th>
                        <th>@Html.DisplayNameFor(m => contactFormData.Email)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.PhoneNumber)</td>
                            <td>@Html.DisplayFor(modelItem => item.Email)</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}